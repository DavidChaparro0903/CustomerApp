package com.david.Customer.Controllers;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.david.Customer.Entity.Customer;
import com.david.Customer.Implementation.CustomerImplementation;

@RestController
@RequestMapping("/customer")
public class ControllerCustomer {

	@Autowired
	private CustomerImplementation customer;

	@GetMapping()
	public List<Customer> getListCustomer() {
		return customer.getListCustomer();
	}

	@PostMapping()
	public void addCustomer(@RequestBody Customer customerAdd) {
		customer.addCustomer(customerAdd);
	}

	@GetMapping("/{id}")
	public ResponseEntity<?> getCustomer(@PathVariable String id) {
		System.out.println("Valor: "+ Long.parseLong(id));
		Customer customerAux = customer.getById(Long.parseLong(id));
		System.out.println("-------------"+customerAux.getId());
		if (customerAux != null) {
			ResponseEntity.ok(customerAux);
		}
		return ResponseEntity.ofNullable(null);
	}

	@PutMapping("/{id}")
	public ResponseEntity<?> put(@PathVariable String id, @RequestBody Customer input) {
		Customer customerAux = customer.getById(Long.parseLong(id));
		if (customerAux != null) {
			input.setId(customerAux.getId());
			return ResponseEntity.ok(input);
		}
		return ResponseEntity.ofNullable(null);

	}

	@DeleteMapping("/{id}")
	public ResponseEntity<?> delete(@PathVariable String id) {
		Customer customerAux = customer.getById(Long.parseLong(id));
		if(customerAux != null) {
			customer.deleteById(Long.parseLong(id));
			return ResponseEntity.ok(true);
		}
		return ResponseEntity.ofNullable(null);
	}

}
